micronaut:
  application:
    name: kafkaNs
  security:
    enabled: true
    authentication: token
    gitlab:
      enabled: true
      url: https://gitlab.com
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"'
    intercept-url-map:
      - pattern: /swagger/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /rapidoc/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /redoc/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        http-method: GET
        access:
          - isAnonymous()
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
kafka:
  health:
    enabled: false
  bootstrap.servers: "[::1]:9093"
  delivery.timeout.ms: 10000
  request.timeout.ms: 10000

jackson:
  serialization-inclusion: NON_ABSENT
  serialization:
    indent-output: true # Pretty-print JSO

ns4kafka:
  store:
    kafka:
      enabled: true
      topics:
        namespaces: ns4kafka.namespaces
        clusters: ns4kafka.clusters
        constraint-validators: ns4kafka.cvs

  security:
    groups:
      admin: # Creates namespaces and administer them
        - f4m/admins
      audit: # Can see everything, readonly
        - nobody