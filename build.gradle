plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.7"
    id "jacoco"
    id "org.sonarqube" version "3.5.0.2730"
}

group = "com.michelin.ns4kafka"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-ldap")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")
    implementation("io.micronaut.openapi:micronaut-openapi")

    compileOnly("org.projectlombok:lombok")

    runtimeOnly("ch.qos.logback:logback-classic")

    testImplementation("org.mockito:mockito-core")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.testcontainers:kafka") {
        version {
            strictly '1.15.3'
        }
    }
    testImplementation("org.mockito:mockito-junit-jupiter:4.11.0")

    testAnnotationProcessor("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")
}

application {
    mainClass.set( "com.michelin.ns4kafka.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion('17')
    targetCompatibility = JavaVersion.toVersion('17')
}

run {
    //environment("MICRONAUT_ENVIRONMENTS","dev")
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.michelin.ns4kafka.*")
    }
}

dockerfile {
    baseImage = "eclipse-temurin:17-jre-alpine"
}

dockerBuild {
    images = ["michelin/ns4kafka:"+version]
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true'
}

sonarqube {
  properties {
    property "sonar.projectKey", "michelin_ns4kafka"
    property "sonar.organization", "michelin"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

jacocoTestReport {
    dependsOn test
    reports {
        html.enabled true
        xml.enabled true
    }
}

test {
    reports {
        html.enabled false
    }
}

